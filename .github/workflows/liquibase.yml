# name: Liquibase CI/CD Pipeline

# on:
#   workflow_dispatch: # Allows manual triggering of the pipeline

# jobs:
#   liquibase-cicd:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_USER: aravindreddynarreddy
#           POSTGRES_PASSWORD: password
#           POSTGRES_DB: staging_db
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd="pg_isready -U aravindreddynarreddy"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=3

#     steps:
#     # Checkout the repository
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     # Wait for PostgreSQL service to be ready
#     - name: Wait for PostgreSQL
#       run: |
#         for i in {1..30}; do
#           if pg_isready -h localhost -p 5432 -U aravindreddynarreddy; then
#             echo "PostgreSQL is ready!"
#             break
#           fi
#           echo "Waiting for PostgreSQL..."
#           sleep 2
#         done

#     # Run Liquibase diffChangeLog
#     - name: Run Liquibase to Create Diff ChangeLog
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}:/liquibase/changelog \
#           liquibase/liquibase \
#           --referenceUrl="jdbc:postgresql://localhost:5432/prod_db" \
#           --referenceUsername="aravindreddynarreddy" \
#           --referencePassword="password" \
#           --url="jdbc:postgresql://localhost:5432/sandbox" \
#           --username="aravindreddynarreddy" \
#           --password="password" \
#           --changeLogFile="changelog_diff.xml" \
#           diffChangeLog

#     # Apply changes to the higher environment (sandbox_db)
#     - name: Apply Changes to Higher Environment
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}:/liquibase/changelog \
#           liquibase/liquibase \
#           --url="jdbc:postgresql://localhost:5432/sandbox" \
#           --username="aravindreddynarreddy" \
#           --password="password" \
#           --changeLogFile="changelog_diff.xml" \
#           update

#     # Generate a new changelog file from the higher environment (sandbox_db)
#     - name: Generate New Changelog from Sandbox DB
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}:/liquibase/changelog \
#           liquibase/liquibase \
#           --url="jdbc:postgresql://localhost:5432/sandbox" \
#           --username="aravindreddynarreddy" \
#           --password="password" \
#           --changeLogFile="changelog_prod_generated.xml" \
#           generateChangeLog

#     # Commit and push the new changelog file to GitHub
#     - name: Push Changelog to GitHub
#       run: |
#         git config --global user.name "reddyaravind"
#         git config --global user.email "reddyaravind838@gmail.com"
#         git add changelog_prod_generated.xml
#         git commit -m "Updated changelog"
#         git push
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



# name: Liquibase CI/CD Pipeline

# on:
#   workflow_dispatch: # Allows manual triggering of the pipeline

# jobs:
#   liquibase-cicd:
#     runs-on: ubuntu-latest

#     steps:
#     # Checkout the repository
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     # Generate Diff ChangeLog
#     - name: Run Liquibase to Generate Diff ChangeLog
#       run: |
#         mkdir -p ${{ github.workspace }}/changelog
#         docker run --rm \
#           -v ${{ github.workspace }}/changelog:/liquibase/changelog \
#           liquibase/liquibase \
#           --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:59848/railway" \
#           --referenceUsername="postgres" \
#           --referencePassword="oebjeJFqRLeFcIBAziEJQsMKeLhUeRFc" \
#           --url="jdbc:postgresql://autorack.proxy.rlwy.net:58854/railway" \
#           --username="postgres" \
#           --password="ThQNAfKRnLPpeLgJgDAkhQwVcEZfuHmH" \
#           --changeLogFile="/liquibase/changelog/changelog_diff.xml" \
#           diffChangeLog
#         ls -l ${{ github.workspace }}/changelog # Check if the file is created

#     # Debug: Check contents of the changelog directory
#     - name: Verify Changelog Directory
#       run: |
#         echo "Listing files in changelog directory:"
#         ls -l ${{ github.workspace }}/changelog
#         cat ${{ github.workspace }}/changelog/changelog_diff.xml

#     # Apply changes to production
#     - name: Apply Changes to Production
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}/changelog:/liquibase/changelog \
#           liquibase/liquibase \
#           --url="jdbc:postgresql://junction.proxy.rlwy.net:59848/railway" \
#           --username="postgres" \
#           --password="oebjeJFqRLeFcIBAziEJQsMKeLhUeRFc" \
#           --changeLogFile="/liquibase/changelog/changelog_diff.xml" \
#           update
#         echo "Changes applied successfully to production!"

#     # Generate a new changelog file from the production DB
#     - name: Generate New Changelog from Production DB
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}/changelog:/liquibase/changelog \
#           liquibase/liquibase \
#           --url="jdbc:postgresql://junction.proxy.rlwy.net:59848/railway" \
#           --username="postgres" \
#           --password="oebjeJFqRLeFcIBAziEJQsMKeLhUeRFc" \
#           --changeLogFile="/liquibase/changelog/changelog_prod_generated.xml" \
#           generateChangeLog

#     # Push the updated changelog to GitHub
#     - name: Push Changelog to GitHub
#       run: |
#         git config --global user.name "reddyaravind"
#         git config --global user.email "reddyaravind838@gmail.com"
#         git add changelog/changelog_prod_generated.xml
#         git commit -m "Updated changelog"
#         git push
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



name: Liquibase CI/CD Pipeline

on:
  workflow_dispatch: # Allows manual triggering of the pipeline

jobs:
  liquibase-cicd:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Generate Diff ChangeLog
    - name: Run Liquibase to Generate Diff ChangeLog
      run: |
        mkdir -p ${{ github.workspace }}/changelog
        docker run --rm \
          -v ${{ github.workspace }}/changelog:/liquibase/changelog \
          liquibase/liquibase \
          --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:59848/railway" \
          --referenceUsername="postgres" \
          --referencePassword="oebjeJFqRLeFcIBAziEJQsMKeLhUeRFc" \
          --url="jdbc:postgresql://autorack.proxy.rlwy.net:58854/railway" \
          --username="postgres" \
          --password="ThQNAfKRnLPpeLgJgDAkhQwVcEZfuHmH" \
          --changeLogFile="/liquibase/changelog/changelog_diff.xml" \
          diffChangeLog
        ls -l ${{ github.workspace }}/changelog # Check if the file is created

    # Debug: Verify Changelog Directory
    - name: Verify Changelog Directory
      run: |
        echo "Listing files in changelog directory:"
        ls -l ${{ github.workspace }}/changelog
        cat ${{ github.workspace }}/changelog/changelog_diff.xml

    # Push the changelog file to GitHub
    - name: Push Changelog to GitHub
      run: |
        git config --global user.name "reddyaravind"
        git config --global user.email "reddyaravind838@gmail.com"
        git add ${{ github.workspace }}/changelog/changelog_diff.xml
        git commit -m "Save generated changelog_diff.xml"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Checkout repository again to retrieve the changelog file
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Apply changes to production using the committed changelog file
    - name: Apply Changes to Production
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/changelog:/liquibase/changelog \
          liquibase/liquibase \
          --url="jdbc:postgresql://junction.proxy.rlwy.net:59848/railway" \
          --username="postgres" \
          --password="oebjeJFqRLeFcIBAziEJQsMKeLhUeRFc" \
          --changeLogFile="/liquibase/changelog/changelog_diff.xml" \
          update
        echo "Changes applied successfully to production!"

    # Generate a new changelog file from the production DB
    - name: Generate New Changelog from Production DB
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/changelog:/liquibase/changelog \
          liquibase/liquibase \
          --url="jdbc:postgresql://junction.proxy.rlwy.net:59848/railway" \
          --username="postgres" \
          --password="oebjeJFqRLeFcIBAziEJQsMKeLhUeRFc" \
          --changeLogFile="/liquibase/changelog/changelog_prod_generated.xml" \
          generateChangeLog

    # Push the updated production changelog to GitHub
    - name: Push Updated Production Changelog to GitHub
      run: |
        git config --global user.name "reddyaravind"
        git config --global user.email "reddyaravind838@gmail.com"
        git add changelog/changelog_prod_generated.xml
        git commit -m "Updated production changelog"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
