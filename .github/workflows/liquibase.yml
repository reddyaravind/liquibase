# name: Liquibase CI/CD Pipeline

# on:
#   workflow_dispatch: # Allows manual triggering of the pipeline

# jobs:
#   liquibase-cicd:
#     runs-on: ubuntu-latest

#     steps:
#     # Checkout the repository
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     # Generate Timestamp for Changelog File
#     - name: Set Timestamp
#       id: timestamp
#       run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

#     # Clean Previous Changelog Directory
#     - name: Clean Changelog Directory
#       run: |
#         mkdir -p ${{ github.workspace }}/changelog
#         rm -rf ${{ github.workspace }}/changelog/*

#     # Generate Diff ChangeLog
#     - name: Run Liquibase to Generate Diff ChangeLog
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}/changelog:/liquibase/changelog \
#           liquibase/liquibase \
#           --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:40998/railway" \
#           --referenceUsername="postgres" \
#           --referencePassword="NmRddKyxchgKwNBHHpqnMvGfhGmdSvoJ" \
#           --url="jdbc:postgresql:/junction.proxy.rlwy.net:26579/railway" \
#           --username="postgres" \
#           --password="PoPIiZqDKPYbuAxkBvGgbDEpcNVuigdq" \
#           --changeLogFile="/liquibase/changelog/changelog_diff_${{ env.TIMESTAMP }}.xml" \
#           diffChangeLog
#         ls -l ${{ github.workspace }}/changelog # Check if the file is created

#     # Debug: Verify Changelog Directory
#     - name: Verify Changelog Directory
#       run: |
#         echo "Listing files in changelog directory:"
#         ls -l ${{ github.workspace }}/changelog
#         cat ${{ github.workspace }}/changelog/changelog_diff_${{ env.TIMESTAMP }}.xml

#     # Apply changes to production using the generated changelog file
#     - name: Apply Changes to Production
#       run: |
#         docker run --rm \
#           -v ${{ github.workspace }}/changelog:/liquibase/changelog \
#           liquibase/liquibase \
#           --url="jdbc:postgresql://junction.proxy.rlwy.net:18143/railway" \
#           --username="postgres" \
#           --password="mETBgLqbGkxManJuOUtqRbdyZQmpRacV" \
#           --changeLogFile="changelog/changelog_diff_${{ env.TIMESTAMP }}.xml" \
#           update
#         echo "Changes applied successfully to production!"

#     # Push the changelog file to GitHub
#     - name: Push Changelog to GitHub
#       run: |
#         git config --global user.name "reddyaravind"
#         git config --global user.email "reddyaravind838@gmail.com"
#         git add changelog/changelog_diff_${{ env.TIMESTAMP }}.xml
#         git commit -m "Save generated changelog_diff_${{ env.TIMESTAMP }}.xml"
#         git push
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




name: Liquibase CI/CD Pipeline

on:
  workflow_dispatch: # Allows manual triggering of the pipeline

jobs:
  liquibase-cicd:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set Timestamp for Unique Filename
    - name: Set Timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    # Step 3: Generate Diff ChangeLog (without volume mount)
    - name: Run Liquibase to Generate Diff ChangeLog
      run: |
        # Create changelog directory in the workspace
        mkdir -p ${{ github.workspace }}/changelog
        echo "Working directory: ${{ github.workspace }}/changelog"
        
        # Run liquibase to generate the diff changelog file
        docker run --rm \
          liquibase/liquibase \
          --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:38704/railway" \
          --referenceUsername="postgres" \
          --referencePassword="PZTcUieBZVvBuxkxfQJSRMeUFXZmdLFN" \
          --url="jdbc:postgresql://junction.proxy.rlwy.net:33223/railway" \
          --username="postgres" \
          --password="oPgUTipUBnhQBqbWnRYpeaKCdNJKMXQp" \
          --changeLogFile="/liquibase/changelog/changelog_diff_${{ env.TIMESTAMP }}.xml" \
          diffChangeLog

    # Step 4: Verify if the changelog file was created in the directory
    - name: Verify Changelog File
      run: |
        echo "Checking if changelog file exists in the directory"
        ls -l ${{ github.workspace }}/changelog # List files in the changelog directory
        if [ -f ${{ github.workspace }}/changelog/changelog_diff_${{ env.TIMESTAMP }}.xml ]; then
          echo "Changelog file created successfully!"
        else
          echo "Changelog file was not created!"
        fi
