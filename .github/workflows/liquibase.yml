name: Liquibase CI/CD Pipeline

on:
  workflow_dispatch: # Allows manual triggering of the pipeline

jobs:
  liquibase-cicd:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Generate Timestamp for Changelog File
    - name: Set Timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    # Clean Previous Changelog Directory
    - name: Clean Changelog Directory
      run: |
        mkdir -p ${{ github.workspace }}/changelog
        rm -rf ${{ github.workspace }}/changelog/*

    # Debug Volume Mapping
    - name: Debug Volume Mapping
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/changelog:/liquibase/changelog \
          alpine sh -c "ls -l /liquibase/changelog"

    # Generate Diff ChangeLog
    - name: Run Liquibase to Generate Diff ChangeLog
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/changelog:/liquibase/changelog \
          liquibase/liquibase \
          --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:38704/railway" \
          --referenceUsername="postgres" \
          --referencePassword="PZTcUieBZVvBuxkxfQJSRMeUFXZmdLFN" \
          --url="jdbc:postgresql://junction.proxy.rlwy.net:33223/railway" \
          --username="postgres" \
          --password="oPgUTipUBnhQBqbWnRYpeaKCdNJKMXQp" \
          --changeLogFile="/liquibase/changelog/changelog_diff_${{ env.TIMESTAMP }}.xml" \
          --logLevel=debug \
          diffChangeLog || echo "Liquibase command failed"
        ls -l ${{ github.workspace }}/changelog 

    # Debug: Verify Changelog Directory
    - name: Verify Changelog Directory
      run: |
        echo "Listing files in changelog directory:"
        ls -l ${{ github.workspace }}/changelog
        cat ${{ github.workspace }}/changelog/changelog_diff_${{ env.TIMESTAMP }}.xml || echo "File not found"

    # Apply changes to production using the generated changelog file
    - name: Apply Changes to Production
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/changelog:/liquibase/changelog \
          liquibase/liquibase \
          --url="jdbc:postgresql://junction.proxy.rlwy.net:33223/railway" \
          --username="postgres" \
          --password="oPgUTipUBnhQBqbWnRYpeaKCdNJKMXQp" \
          --changeLogFile="changelog/changelog_diff_${{ env.TIMESTAMP }}.xml" \
          update
        echo "Changes applied successfully to production!"

    # Push the changelog file to GitHub
    - name: Push Changelog to GitHub
      run: |
        git config --global user.name "reddyaravind"
        git config --global user.email "reddyaravind838@gmail.com"
        git add changelog/changelog_diff_${{ env.TIMESTAMP }}.xml
        git commit -m "Save generated changelog_diff_${{ env.TIMESTAMP }}.xml"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
