# trigger:
#   branches:
#     include:
#       - main  # Define your branch trigger (you can specify any branch)


# pool:
#   name: Default  # Your agent pool name
#   demands:
#     - agent.name -equals DART  # Ensure it uses the DART agent
# jobs:
#   - job: Liquibase
#     displayName: 'Run Liquibase Changes'
#     pool:
#       vmImage: 'ubuntu-latest'

#     steps:
#       - task: Checkout@1
#         displayName: 'Checkout repository'
        
#       - script: |
#           echo "Setting up Liquibase..."
#           mkdir -p $(changelogDir)
#         displayName: 'Setup changelog directory'

#       # Step 1: Generate Liquibase Changelog Diff (between two databases)
#       - script: |
#           echo "Running Liquibase to generate Diff Changelog..."
#           docker run --rm \
#             -v $(changelogDir):/liquibase/changelog \
#             $(liquibaseImage) \
#             --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:38704/railway" \
#             --referenceUsername="postgres" \
#             --referencePassword="PZTcUieBZVvBuxkxfQJSRMeUFXZmdLFN" \
#             --url="jdbc:postgresql://junction.proxy.rlwy.net:33223/railway" \
#             --username="postgres" \
#             --password="oPgUTipUBnhQBqbWnRYpeaKCdNJKMXQp" \
#             --changeLogFile="/liquibase/changelog/changelog_diff.xml" \
#             diffChangeLog
#         displayName: 'Generate Diff Changelog'

#       # Step 2: List changelog files to check if it's created
#       - script: |
#           echo "Listing files in changelog directory:"
#           ls -l $(changelogDir)
#         displayName: 'List changelog directory'

#       # Step 3: Apply the changelog to the target database
#       - script: |
#           echo "Applying changelog to the target database..."
#           docker run --rm \
#             -v $(changelogDir):/liquibase/changelog \
#             $(liquibaseImage) \
#             --url="jdbc:postgresql://junction.proxy.rlwy.net:33223/railway" \
#             --username="postgres" \
#             --password="oPgUTipUBnhQBqbWnRYpeaKCdNJKMXQp" \
#             --changeLogFile="/liquibase/changelog/changelog_diff).xml" \
#             update
#         displayName: 'Apply Changelog to Database'

     
# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default

# variables:
#   liquibaseImage: liquibase/liquibase:4.30
#   # changelogDir: $(Build.SourcesDirectory)/changelog
#   # timestamp: $(Build.BuildId)  # Simplified timestamp for debugging

# jobs:
#   - job: Liquibase
#     displayName: 'Run Liquibase Changes'
#     pool:
#       vmImage: 'ubuntu-latest'

#     steps:
#       - task: Checkout@1
#         displayName: 'Checkout repository'
        
#       # Step 1: Setup changelog directory
#       - script: |
#           echo "Setting up Liquibase..."
#           # mkdir -p $(changelogDir)
#         displayName: 'Setup changelog directory'

#       # Step 2: Generate Diff Changelog
#       - script: |
#           echo "Running Liquibase to generate Diff Changelog..."
#           docker run --rm \
#             -v $(changelogDir):/liquibase/changelog \
#             $(liquibaseImage) \
#             --referenceUrl="jdbc:postgresql://junction.proxy.rlwy.net:38704/railway" \
#             --referenceUsername="postgres" \
#             --referencePassword="PZTcUieBZVvBuxkxfQJSRMeUFXZmdLFN" \
#             --url="jdbc:postgresql://junction.proxy.rlwy.net:33223/railway" \
#             --username="postgres" \
#             --password="oPgUTipUBnhQBqbWnRYpeaKCdNJKMXQp" \
#             --changeLogFile="/liquibase/changelog/changelog.xml" \
#             diffChangeLog
#         displayName: 'Generate Diff Changelog'

#       # Step 3: List files in changelog directory
#       - script: |
#           echo "Listing files in changelog directory:"
#           # ls -l $(changelogDir)
#         displayName: 'List changelog directory'


# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default  # Your agent pool name
#   demands:
#     - agent.name -equals DART  # Ensure it uses the DART agent

# variables:
#   system.debug: true
#   liquibaseImage: liquibase/liquibase:4.30
#   changelogDir: $(Build.SourcesDirectory)/changelog
#   timestamp: $(Build.BuildId)  # Simplified timestamp for debugging

# jobs:
#   - job: Liquibase
#     displayName: 'Run Liquibase Changes'


#     steps:
#       # - task: Checkout@1
#       #   displayName: 'Checkout repository'
        
#       # Step 1: Setup changelog directory
#       - script: |
#           echo "Setting up Liquibase..."
#           # mkdir -p $(Build.SourcesDirectory)/changelog
#         displayName: 'Setup changelog directory'

#       # Step 2: Generate Diff Changelog
#       - script: |
#           echo "Running Liquibase to generate Diff Changelog..."
#           docker run --rm \
#             -v $(changelogDir):/liquibase/changelog \
#             liquibase/liquibase:4.30 \
#             --referenceUrl="jdbc:postgresql://autorack.proxy.rlwy.net:50269/railway" \
#             --referenceUsername="postgres" \
#             --referencePassword="YfRHTcyFlfZzQSzAIjFNTuEecneeXNrC" \
#             --url="jdbc:postgresql://autorack.proxy.rlwy.net:26951/railway" \
#             --username="postgres" \
#             --password="xfttiOeikUERuTxAIEoNpMpuZFlAQxgv" \
#             --changeLogFile="/liquibase/changelog/changelog.xml" \
#             diffChangeLog
#         displayName: 'Generate Diff Changelog'

#       # Step 3: List files in changelog directory
#       - script: |
#           echo "Listing files in changelog directory:"
#           ls -l $(Build.SourcesDirectory)/changelog
#         displayName: 'List changelog directory'

# trigger:
#   branches:
#     include:
#       - main

# pool:
#   name: Default
#   demands:
#     - agent.name -equals DART

# variables:
#   system.debug: true
#   liquibaseImage: liquibase/liquibase:4.30
#   changelogDir: $(Build.SourcesDirectory)/changelog

# jobs:
#   - job: Liquibase
#     displayName: 'Run Liquibase Changes'
#     timeoutInMinutes: 30

#     steps:
#       - script: |
#           echo "Creating changelog directory..."
#           mkdir -p $(Build.SourcesDirectory)/changelog
#           ls -l $(Build.SourcesDirectory)
#         displayName: 'Setup changelog directory'

#       - script: |
#           echo "Running Liquibase to generate Diff Changelog..."
#           docker run --rm \
#             -v $(Build.SourcesDirectory)/changelog:/liquibase/changelog \
#             liquibase/liquibase:4.30 \
#             --referenceUrl="jdbc:postgresql://autorack.proxy.rlwy.net:50269/railway" \
#             --referenceUsername="postgres" \
#             --referencePassword="YfRHTcyFlfZzQSzAIjFNTuEecneeXNrC" \
#             --url="jdbc:postgresql://autorack.proxy.rlwy.net:26951/railway" \
#             --username="postgres" \
#             --password="xfttiOeikUERuTxAIEoNpMpuZFlAQxgv" \
#             --changeLogFile="/changelog/changelog.xml" \
#             diffChangeLog || true
#           echo "Command completed with exit code $?"
#         displayName: 'Generate Diff Changelog'

#       - script: |
#           echo "Listing files in changelog directory:"
#           ls -l $(Build.SourcesDirectory)/changelog
#         displayName: 'List changelog directory'

trigger:
  branches:
    include:
      - main

pool:
  name: Default  # Replace with your agent pool name
  demands:
    - agent.name -equals DART  # Ensure it uses the DART agent

variables:
  system.debug: true
  liquibaseImage: liquibase/liquibase:4.30
  changelogDir: $(Build.SourcesDirectory)/changelog
  timestamp: $(Build.BuildId)  # Build-specific identifier for debugging

jobs:
  - job: Liquibase
    displayName: 'Run Liquibase Changes'

    steps:
      # Step 1: Debug Permissions for Sources Directory
      - script: |
          echo "Debugging permissions for Build.SourcesDirectory..."
          ls -ld $(Build.SourcesDirectory) || echo "Build.SourcesDirectory does not exist."
        displayName: 'Check Sources Directory Permissions'

   

      # Step 4: Run Liquibase Diff Changelog Command
      - script: |
          echo "Running Liquibase to generate Diff Changelog..."
          mkdir -p $(changelogDir)
          echo "Setting permissions for changelog directory..."
          chmod -R 777 $(changelogDir)
          rm -rf $(changelogDir)/changelog/*
          docker run --rm \
            -v $(changelogDir):/liquibase/changelog \
            $(liquibaseImage) \
            --referenceUrl="jdbc:postgresql://autorack.proxy.rlwy.net:50269/railway" \
            --referenceUsername="postgres" \
            --referencePassword="YfRHTcyFlfZzQSzAIjFNTuEecneeXNrC" \
            --url="jdbc:postgresql://autorack.proxy.rlwy.net:26951/railway" \
            --username="postgres" \
            --password="xfttiOeikUERuTxAIEoNpMpuZFlAQxgv" \
            --changeLogFile="changelog.xml" \
            diffChangeLog || true
          echo "Command completed with exit code $?"
        displayName: 'Generate Diff Changelog'

      # Step 5: Verify Changelog File in Container
      - script: |
          echo "Inspecting Liquibase container filesystem for changelog file..."
          docker run --rm \
            $(liquibaseImage) \
            sh -c "ls -l /liquibase/changelog && cat /liquibase/changelog/changelog.xml || echo 'Changelog not found in container.'"
        displayName: 'Verify Changelog File in Container'

      # Step 6: Verify and Print Changelog File on Host
      - script: |
          echo "Checking for changelog.xml in $(changelogDir):"
          ls -l $(changelogDir) && cat $(changelogDir)/changelog.xml || echo "changelog.xml not found in host directory."
        displayName: 'Verify and Print Changelog File'

      # Optional Cleanup: Remove Test Files
      - script: |
          echo "Cleaning up test files from changelog directory..."
          rm -f $(changelogDir)/test_file.txt
          echo "Cleanup completed. Directory contents:"
          ls -l $(changelogDir)
        displayName: 'Cleanup Test Files (Optional)'
